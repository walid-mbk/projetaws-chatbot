stages:
  - build
  - deploy

before_script:
  - echo "Installing AWS CLI dependencies"
  - apk add --no-cache curl jq python3 py3-pip
  - python3 -m venv awscli-venv
  - source awscli-venv/bin/activate
  - pip install awscli
  - aws --version
  - docker --version
  - aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID}
  - aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY}
  - aws configure set default.region us-east-1
  - aws configure list



build-chatbot:
  stage: build
  image:
    name: docker:latest
  services:
    - name: docker:dind
      alias: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  script:
    - unset DOCKER_HOST
    - source awscli-venv/bin/activate
    - aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin 905418230821.dkr.ecr.eu-north-1.amazonaws.com
    - docker build -t chatbot_backend .
    - docker tag chatbot_backend:latest $DOCKER_IMAGE_CHATBOT
    - docker push $DOCKER_IMAGE_CHATBOT

deploy-chatbot:
  stage: deploy
  image: bitnami/kubectl:latest
  script:
    - kubectl apply -f k8s-manifests/deployment.yaml
    - kubectl apply -f k8s-manifests/service.yaml
  only:
    - main
